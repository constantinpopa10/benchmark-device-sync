<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xsi:schemaLocation="http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- alfresco-benchmark-tests-device-sync : -->

    <!-- Messaging -->
 
    <import resource="classpath:services-common-messaging-context.xml"/>

    <bean id="camelRequiredTxn" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
      <property name="transactionManager" ref="messagingTransactionManager"/>
      <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory" ref="messagingConnectionFactory" />
        <property name="transacted" value="true" />
        <property name="transactionManager" ref="messagingTransactionManager" />
    </bean>

   <camelContext xmlns="http://camel.apache.org/schema/spring" id="alfrescoServiceCamelContext"> 
      <contextScan/>

      <template id="camelProducerTemplate"
            defaultEndpoint="direct:alfresco.default" />

      <endpoint id="nodes" uri="${sync.camel.endpoint.nodes}"/>

      <route>
          <from uri="direct-vm:bm.nodes" />
          <marshal><custom ref="defaultDataFormatDef" /></marshal>
          <to uri="ref:nodes" />
      </route>
   </camelContext>

    <!-- Import any application contexts for test runs -->
    <import resource="classpath:config/spring/test-common-context.xml" />
    <import resource="classpath:config/spring/test-http-context.xml" />

    <!--         -->
    <!-- Http    -->
    <!--         -->

    <!-- Shared HTTP-Client instance provider to have better performance -->
    <bean id="httpClientProvider" class="org.alfresco.http.SharedHttpClientProvider">
         <constructor-arg name="maxNumberOfConnections" value="${http.connection.max}" />
         <constructor-arg name="connectionTimeoutMs" value="${http.connection.timeoutMs}" />
         <constructor-arg name="socketTimeoutMs" value="${http.socket.timeoutMs}" />
         <constructor-arg name="socketTtlMs" value="${http.socket.ttlMs}" />
    </bean>

    <bean id="activeMQMonitor" class="org.alfresco.bm.devicesync.util.ActiveMQMonitor">
         <constructor-arg name="activeMQHost" value="${activemq.host}" />
         <constructor-arg name="activeMQPort" value="${activemq.port}" />
    </bean>

    <bean id="cmisSessionFactory" class="org.alfresco.bm.devicesync.util.CMISSessionFactory">
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="alfrescoScheme" value="${alfresco.scheme}" />
        <constructor-arg name="alfrescoHost" value="${alfresco.server}" />
        <constructor-arg name="alfrescoPort" value="${alfresco.port}" />
    </bean>

    <!--            -->
    <!-- DAO        -->
    <!--            -->
    <!-- <bean id="processDataDAO" class="org.alfresco.bm.data.ProcessDataDAO" > <constructor-arg name="db" ref="testMongoDB" 
        /> <constructor-arg name="collection" value="mirrors.${proc.dataMirror}.processes" /> </bean> -->

    <!--                        -->
    <!-- User Data Service      -->
    <!--                        -->
    <bean id="userDataService" class="org.alfresco.bm.user.UserDataServiceImpl">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${users.collectionName}" />
    </bean>

    <!--                        -->
    <!-- Site Data Service      -->
    <!--                        -->
    <bean id="siteDataService" class="org.alfresco.bm.devicesync.dao.mongo.ExtendedSiteDataServiceImpl">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="sites" value="${mirror.sites}" />
        <constructor-arg name="siteMembers" value="${mirror.siteMembers}" />
    </bean>

    <bean id="subscribersDataService" class="org.alfresco.bm.devicesync.dao.mongo.MongoSubscribersService">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${mirror.subscribers}" />
    </bean>

    <bean id="subscriptionsDataService" class="org.alfresco.bm.devicesync.dao.mongo.MongoSubscriptionsService">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${mirror.subscriptions}" />
    </bean>

    <bean id="syncsDataService" class="org.alfresco.bm.devicesync.dao.mongo.MongoSyncsService">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${mirror.syncs}" />
    </bean>

    <bean id="metricsService" class="org.alfresco.monitoring.dao.mongo.MongoMetricsService">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${testRunFqn}.${syncMetrics}" />
    </bean>

    <bean id="nodesDataService" class="org.alfresco.repomirror.dao.mongo.MongoNodesDataService">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${mirror.nodes}" />
    </bean>

    <bean id="fileDataService" class="org.alfresco.bm.file.FileDataServiceImpl">
        <constructor-arg name="db" ref="testMongoDB" />
        <constructor-arg name="collection" value="${files.collection.name}" />
    </bean>

    <!--            -->
    <!-- Lifecycle  -->
    <!--            -->

    <bean id="testLifeCycleController" class="org.alfresco.bm.test.LifecycleController">
        <constructor-arg>
            <array>
                <ref bean="eventController" />
            </array>
        </constructor-arg>
    </bean>

    <!--                    -->
    <!-- Auth provider      -->
    <!--                    -->
    <bean id="authenticationDetailsProvider" class="org.alfresco.bm.http.UserDataAutheticationDetailsProvider">
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="adminUserName" value="${alfresco.admin.user}" />
        <constructor-arg name="adminPassword" value="${alfresco.admin.pwd}" />
    </bean>

    <bean id="testFileService" class="org.alfresco.bm.file.FtpTestFileService">
        <constructor-arg name="fileDataService" ref="fileDataService" />
        <constructor-arg name="localDir" value="${files.cache.dir}" />
        <constructor-arg name="ftpHost" value="${files.ftp.host}" />
        <constructor-arg name="ftpPort" value="${files.ftp.port}" />
        <constructor-arg name="ftpUsername" value="${files.ftp.username}" />
        <constructor-arg name="ftpPassword" value="${files.ftp.password}" />
        <constructor-arg name="ftpPath" value="${files.ftp.path}" />
    </bean>

    <bean id="cmisUploadFileHelper" class="org.alfresco.bm.devicesync.util.CMISUploadFileHelper">
        <constructor-arg name="testFileService" ref="testFileService" />
        <constructor-arg name="nodesDataService" ref="nodesDataService" />
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="alfrescoHost" value="${alfresco.server}" />
        <constructor-arg name="alfrescoPort" value="${alfresco.port}" />
    </bean>

    <bean id="spoofUploadFileHelper" class="org.alfresco.bm.devicesync.util.SpoofUploadFileHelper">
        <constructor-arg name="testFileService" ref="testFileService" />
        <constructor-arg name="nodesDataService" ref="nodesDataService" />
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="messageProducer">
            <bean class="org.gytheio.messaging.camel.CamelMessageProducer">
                <property name="producer" ref="camelProducerTemplate" />
                <property name="endpoint" value="direct-vm:bm.nodes" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="uploadFileHelper" class="org.alfresco.bm.devicesync.util.SwitchingUploadFileHelper">
        <constructor-arg name="type" value="${uploadType}" />
        <constructor-arg name="spoofUploadFileHelper" ref="spoofUploadFileHelper" />
        <constructor-arg name="cmisUploadFileHelper" ref="cmisUploadFileHelper" />
    </bean>

    <bean id="downloadFileHelper" class="org.alfresco.bm.devicesync.util.DownloadFileHelper">
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="alfrescoHost" value="${alfresco.server}" />
        <constructor-arg name="alfrescoPort" value="${alfresco.port}" />
    </bean>

     <!-- API factories -->

    <bean id="publicApiFactory" class="org.alfresco.bm.devicesync.util.BasicAuthPublicApiFactory">
        <constructor-arg name="repoScheme" value="${alfresco.scheme}"/>
        <constructor-arg name="repoHost" value="${alfresco.server}"/>
        <constructor-arg name="repoPort" value="${alfresco.port}"/>
        <constructor-arg name="syncScheme" value="${sync.scheme}"/>
        <constructor-arg name="syncHost" value="${sync.server}"/>
        <constructor-arg name="syncPort" value="${sync.port}"/>
        <constructor-arg name="preferredCMISEndPoint"><null/></constructor-arg>
        <constructor-arg name="maxNumberOfConnections" value="${http.connection.max}"/>
        <constructor-arg name="connectionTimeoutMs" value="${http.connection.timeoutMs}"/>
        <constructor-arg name="socketTimeoutMs" value="${http.socket.timeoutMs}"/>
        <constructor-arg name="socketTtlMs" value="${http.socket.ttlMs}"/>
        <constructor-arg name="userDataService" ref="userDataService"/>
        <constructor-arg name="context" value="alfresco"/>
        <constructor-arg name="publicApiServletName" value="api"/>
        <constructor-arg name="serviceServletName" value="services"/>
    </bean>

    <bean id="siteSampleSelector" class="org.alfresco.bm.devicesync.util.SiteSampleSelector">
        <constructor-arg name="siteDataService" ref="siteDataService" />
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="nodesDataService" ref="nodesDataService" />
        <constructor-arg name="sitesLimit" value="${sitesLimit}" />
    </bean>

    <bean id="treeWalkHelper" class="org.alfresco.bm.devicesync.util.TreeWalkHelper">
        <constructor-arg ref="cmisSessionFactory" />
        <constructor-arg name="splitIntoEvents" value="${treeWalkBatch.splitIntoEvents}" />
    </bean>

    <!--                    -->
    <!-- EventProcessors    -->
    <!--                    -->
    <!-- The event processors will handle events based on their bean names after removal of the 'event.' prefix. So, for 
        example: bean "event.start" will handle events named "start" bean "event.invite" will handle events named "invite" This behaviour 
        can be overridden. See the javadocs of AbstractEventProcessor. The 'producer.process' bean shows how an event can be redirected 
        with an optional delay: in this case, to 'event.doProcess'. The 'producer.users.ready' renames the 'users.ready' event to 
        'scheduleProcesses' without any other modification. The 'producer.processDone' effectively absorbs the 'processDone' events. -->

    <!-- Good practice to start with an event rename as the 'start' event is reserved -->
    <bean id="event.start" class="org.alfresco.bm.event.RenameEventProcessor" parent="event.base">
        <constructor-arg name="outputEventName" value="prepareSubscribers" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.prepareSubscribers" class="org.alfresco.bm.devicesync.eventprocessor.PrepareSubscribers" parent="event.base">
        <constructor-arg name="subscribersService" ref="subscribersDataService" />
        <constructor-arg name="eventNameSubscribersBatch" value="subscribersBatch" />
        <constructor-arg name="nextEventName" value="prepareSubscriptions" />
        <constructor-arg name="minSubscribers" value="${prepareSubscribers.minSubscribers}" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.prepareSubscriptions" class="org.alfresco.bm.devicesync.eventprocessor.PrepareSubscriptions" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="eventNameSubscriptionsBatch" value="subscriptionsBatch" />
        <constructor-arg name="nextEventName" value="batchProcessor" />
        <constructor-arg name="minSubscriptions" value="${prepareSubscriptions.minSubscriptions}" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.batchProcessor" class="org.alfresco.bm.devicesync.eventprocessor.BatchProcessor" parent="event.base">
        <constructor-arg name="eventNameSubscribersBatch" value="subscribersBatch" />
        <constructor-arg name="eventNameSubscriptionsBatch" value="subscriptionsBatch" />
        <constructor-arg name="eventNameSyncBatch" value="syncBatch" />
        <constructor-arg name="eventNameCollectStatsBatch" value="collectStatsBatch" />
        <constructor-arg name="eventNameUploadFileBatch" value="uploadFileBatch" />
        <constructor-arg name="eventNameUploadAndSyncBatch" value="uploadAndSyncBatch" />
        <constructor-arg name="eventNameTreeWalkBatch" value="treeWalkBatch" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.collectStatsBatch" class="org.alfresco.bm.devicesync.eventprocessor.CollectStatsBatch" parent="event.base">
        <constructor-arg name="numBatches" value="${collectStatsBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${collectStatsBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameCollectStats" value="collectStats" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.collectStats" class="org.alfresco.bm.devicesync.eventprocessor.CollectStats" parent="event.base">
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
        <constructor-arg name="metricsService" ref="metricsService" />
        <constructor-arg name="activeMQMonitor" ref="activeMQMonitor" />
    </bean>

    <bean id="event.subscribersBatch" class="org.alfresco.bm.devicesync.eventprocessor.SubscribersBatch" parent="event.base">
        <constructor-arg name="siteDataService" ref="siteDataService" />
        <constructor-arg name="batchSize" value="${subscribersBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${subscribersBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${subscribersBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameCreateSubscriber" value="createSubscriber" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.subscriptionsBatch" class="org.alfresco.bm.devicesync.eventprocessor.SubscriptionsBatch" parent="event.base">
        <constructor-arg name="subscribersDataService" ref="subscribersDataService" />
        <constructor-arg name="siteDataService" ref="siteDataService" />
        <constructor-arg name="batchSize" value="${subscriptionsBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${subscriptionsBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${subscriptionsBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameCreateSubscription" value="createSubscription" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.createSubscription" class="org.alfresco.bm.devicesync.eventprocessor.CreateSubscription" parent="event.base">
        <constructor-arg name="siteDataService" ref="siteDataService" />
        <constructor-arg name="subscribersService" ref="subscribersDataService" />
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
    </bean>

    <bean id="event.deleteSubscription" class="org.alfresco.bm.devicesync.eventprocessor.DeleteSubscription" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
    </bean>

    <bean id="event.createSubscriber" class="org.alfresco.bm.devicesync.eventprocessor.CreateSubscriber" parent="event.base">
        <constructor-arg name="userDataService" ref="userDataService" />
        <constructor-arg name="subscribersService" ref="subscribersDataService" />
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
    </bean>

    <bean id="event.deleteSubscriber" class="org.alfresco.bm.devicesync.eventprocessor.DeleteSubscriber" parent="event.base">
        <constructor-arg name="subscribersService" ref="subscribersDataService" />
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
    </bean>

    <bean id="event.syncBatch" class="org.alfresco.bm.devicesync.eventprocessor.SyncBatch" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="siteSampleSelector" ref="siteSampleSelector" />
        <constructor-arg name="batchSize" value="${syncBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${syncBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${syncBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameStartSync" value="startSync" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.uploadAndSyncBatch" class="org.alfresco.bm.devicesync.eventprocessor.UploadAndSyncBatch" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="siteSampleSelector" ref="siteSampleSelector" />
        <constructor-arg name="batchSize" value="${uploadAndSyncBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${uploadAndSyncBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${uploadAndSyncBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="waitTimeBetweenUploadAndSync" value="${uploadAndSyncBatch.waitTimeBetweenUploadAndSync}" />
        <constructor-arg name="eventNameStartSync" value="startSync" />
        <constructor-arg name="eventNameUploadFile" value="uploadFileForSubscription" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.startSync" class="org.alfresco.bm.devicesync.eventprocessor.StartSync" parent="event.base">
        <constructor-arg name="sessionService" ref="sessionService" />
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
        <constructor-arg name="timeBetweenSyncOps" value="${sync.timeBetweenSyncOps}" />
    </bean>

    <bean id="event.getSync" class="org.alfresco.bm.devicesync.eventprocessor.GetSync" parent="event.base">
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
        <constructor-arg name="timeBetweenSyncOps" value="${sync.timeBetweenSyncOps}" />
        <constructor-arg name="maxTries" value="${sync.getSync.maxTries}" />
        <constructor-arg name="timeBetweenGetSyncs" value="${getSync.timeBetweenGetSyncs}" />
        <constructor-arg name="timeBetweenGetFiles" value="${getSync.timeBetweenGetFiles}" />
        <constructor-arg name="getFilesEnabled" value="${getSync.getFilesEnabled}"></constructor-arg>
        <constructor-arg name="eventNameEndSync" value="endSync"></constructor-arg>
        <constructor-arg name="eventNameGetFile" value="getFile"></constructor-arg> 
    </bean>

    <bean id="event.endSync" class="org.alfresco.bm.devicesync.eventprocessor.EndSync" parent="event.base">
        <constructor-arg name="publicApiFactory" ref="publicApiFactory" />
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
    </bean>

    <bean id="event.prepareSyncs" class="org.alfresco.bm.devicesync.eventprocessor.PrepareSyncs" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="numBatches" value="${prepareSyncs.numBatches}" />
        <constructor-arg name="eventNameStartSync" value="startSync" />
        <constructor-arg name="waitTimeBetweenSyncs" value="${prepareSyncs.waitTimeBetweenSyncs}" />
        <constructor-arg name="batchSize" value="${prepareSyncs.batchSize}" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.uploadFileForSubscription" class="org.alfresco.bm.devicesync.eventprocessor.UploadFileForSubscription" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="uploadFileHelper" ref="uploadFileHelper" />
    </bean>

    <bean id="event.uploadFileBatch" class="org.alfresco.bm.devicesync.eventprocessor.UploadFileBatch" parent="event.base">
        <constructor-arg name="siteSampleSelector" ref="siteSampleSelector" />
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="batchSize" value="${uploadFileBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${uploadFileBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${uploadFileBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameUploadFile" value="uploadFileForSubscription" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.getFile" class="org.alfresco.bm.devicesync.eventprocessor.GetFile" parent="event.base">
        <constructor-arg name="downloadFileHelper" ref="downloadFileHelper" />
    </bean>

    <bean id="event.fileDownloaded" class="org.alfresco.bm.event.DoNothingEventProcessor" parent="event.base">
        <property name="chart" value="false" />
    </bean>

    <bean id="event.fileUploaded" class="org.alfresco.bm.event.DoNothingEventProcessor" parent="event.base">
        <property name="chart" value="false" />
    </bean>

    <bean id="event.treeWalkBatch" class="org.alfresco.bm.devicesync.eventprocessor.TreeWalkBatch" parent="event.base">
        <constructor-arg name="subscriptionsService" ref="subscriptionsDataService" />
        <constructor-arg name="siteSampleSelector" ref="siteSampleSelector" />
        <constructor-arg name="batchSize" value="${treeWalkBatch.batchSize}" />
        <constructor-arg name="numBatches" value="${treeWalkBatch.numBatches}" />
        <constructor-arg name="waitTimeBetweenBatches" value="${treeWalkBatch.waitTimeBetweenBatches}" />
        <constructor-arg name="eventNameTreeWalk" value="treeWalk" />
        <property name="chart" value="false" />
    </bean>

    <bean id="event.treeWalk" class="org.alfresco.bm.devicesync.eventprocessor.TreeWalk" parent="event.base">
        <constructor-arg ref="treeWalkHelper" />
    </bean>

    <bean id="event.treeWalkGetDocument" class="org.alfresco.bm.devicesync.eventprocessor.TreeWalkGetDocument" parent="event.base">
        <constructor-arg name="cmisSessionFactory" ref="cmisSessionFactory" />
    </bean>

    <bean id="event.treeWalkGetChildren" class="org.alfresco.bm.devicesync.eventprocessor.TreeWalkGetChildren" parent="event.base">
        <constructor-arg name="cmisSessionFactory" ref="cmisSessionFactory" />
    </bean>
</beans>